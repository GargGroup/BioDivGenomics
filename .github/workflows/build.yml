name: build
on:
  push:
  pull_request:
  schedule:
    # Run scheduled job UTC 21:00 (CEST 23:00) every day.
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onschedule
    - cron: '0 22 * * *'
jobs:
  make:
    name: make ${{ matrix.entry.targets }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        entry:
          - { targets: "test-containers" }
          - { targets: "run", dockstore: true }
    steps:
      - uses: actions/checkout@v3
      # Setup Dockstore command line interface (CLI).
      # https://dockstore.org/quick-start
      # https://github.com/actions/setup-java
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - run: java --version
      - run: |
          sudo apt install -y \
            python3-pytest \
            python3-pytest-xdist
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#adding-a-system-path
      - run: echo "$HOME/.local/bin" >> $GITHUB_PATH
        if: ${{ matrix.entry.dockstore }}
      - run: ci/install-dockstore-cli.sh
        if: ${{ matrix.entry.dockstore }}
      - run: dockstore --version
        if: ${{ matrix.entry.dockstore }}
      # Check available memory size before running the workflow.
      - run: free -h
      # Set GNUMAKEFLAGS to run the make targets in parallel.
      - run: |
          echo "GNUMAKEFLAGS=-j$((1 + $(nproc --all)))" >> $GITHUB_ENV
      - run: make lint
        if: ${{ matrix.entry.dockstore }}
      - run: make ${{ matrix.entry.targets }}
  make-test:
    name: make test ${{ matrix.entry.test }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        entry:
          - { test: "test_estimation" }
          - { test: "test_assembly_on_data_type_hifi" }
          - { test: "test_assembly_on_data_type_ont" }
          - { test: "test_scaffold_on_data_type_hifi_is_test_1" }
          - { test: "test_scaffold_on_data_type_hifi_is_test_0" }
          - { test: "test_scaffold_on_data_type_ont" }
    env: { TEST_WDL_ENGINE: 'cromwell' }
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - run: java --version
      - run: |
          sudo apt install -y \
            python3-pytest \
            python3-pytest-xdist
      - run: free -h
      - run: |
          ci/retry.sh wget https://github.com/broadinstitute/cromwell/releases/download/77/cromwell-77.jar \
            -O vendor/cromwell/cromwell-77.jar
      - run: |
          make test TEST_OPTS=-s TEST_FILE=test/test.py::${{ matrix.entry.test }}
